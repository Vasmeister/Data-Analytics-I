# ----------------------------------------------------------------------------
#                                                                                                                      
#
#                  88
#                  88
#                  88             
#                  88                                   
#                  88                                    
#                  8b,dPPPPYba, ,dPPPYba,   ,adYPPPYba88
#                  88P'    `"8a a8P   `"8a  a8P       88
#                  88        88 8PP         8PP       88
#                  88        88 `"PPYYba"   8O        88
#                  88        88         8P   8b,     ,88
#                  88        88 "8a,   "a8   `"Ybbdd888"
#                  88        88 `"YbbdPP"             88
#                                                     88
#                                            "8b      88
#                                            `"Ybbdd888"  
#
#     Jose de Mattamouros, Linda Odermatt, Elena Trevisani, Vasily Zhuravlev
#     Master in Economics
#     University of St. Gallen
#     9000 St. Gallen
#
# ------------------------------------------------------------------------------
# 
# Filename:  Data Analytics 1: Predictive Econometrics - PC 5
# Topic:     Classification
# Date of submission: 21.12.2022
#
# ------------------------------------------------------------------------------
#Step 1: Set the working directory:
#Find which directory you are currently working in
ddpath 
getwd()
# "~/Desktop/HSG/MEcon Herbst Semester/2nd half of the semester/Data Analytics I - Predictive Econometrics/Lecture 6 - Regularised Regression"
#Set the directory you would like to work in
setwd("~/Desktop/HSG/MEcon Herbst Semester/2nd half of the semester/Data Analytics I - Predictive Econometrics/Lecture 6 - Regression Trees and Forests")


#Load data
load("drugs.Rdata")

# ------------------------------------------------------------------------------
#Step 2: Install and load the relevant packages for the problem

#remove # to install the packages
#install.packages("rpart")
#install.packages("rpart.plot")

#load the packages
library("ggplot2")
library("rpart")
library("rpart.plot")

#-------------------------------------------------------------------------------

#Exercise 1 - Calculate the share of males who consume soft drugs 

soft_drug_male_cons <- drugs[drugs$Gender == "male" & drugs$Soft_Drug == TRUE, ]

sd_male_share <- round(nrow(soft_drug_male_cons)/
                         nrow(drugs[drugs$Gender == "male",])*100, 2)

print(paste("The share of males who consume soft drugs is equivalent to", 
            sd_male_share,"%"))
            
#-------------------------------------------------------------------------------

#Exercise 2 - Share difference between male and female hard drug consumers

hard_drug_male_cons <- drugs[drugs$Gender == "male" & drugs$Hard_Drug == TRUE, ]

hd_male_share <- round(nrow(hard_drug_male_cons)/
                         nrow(drugs[drugs$Gender == "male",])*100, 2)

hard_drug_female_cons <- drugs[drugs$Gender == "female" & drugs$Hard_Drug == TRUE, ]

hd_female_share <- round(nrow(hard_drug_female_cons)/
                         nrow(drugs[drugs$Gender == "female",])*100, 2)

hd_dif <- abs(hd_male_share - hd_female_share)

gender_hd_consumption <- data.frame(hd_male_share, hd_female_share, hd_dif)

colnames(gender_hd_consumption) = c("Hard Drug Male Share",
                                    "Hard Drug Female Share",
                                    "Difference")

print(gender_hd_consumption)

print(paste(
  "The share difference in hard drug consumption between males and females is", 
  hd_dif, "%"))

#-------------------------------------------------------------------------------

#Exercise 3 - Share of soft drug users by age group, focus on young adults
# we verify that only 3 age categories are present and store them in age_group

age_group=matrix(levels(factor(drugs$Age, order=TRUE)))

#Create an empty matrix
age_matrix = matrix(NA, nrow=length(age_group), 
                     ncol=1)
rownames(age_matrix) <- c(age_group[1:length(age_group),])
colnames(age_matrix) <- c("Share of Soft Drug Users")
#Quick Test
nrow(drugs[drugs$Age == age_group[1,] & drugs$Soft_Drug == TRUE, ])
nrow(drugs[drugs$Age == age_group[1,] ,])

#For loop to store all the values
for (i in c(1:length(age_group))){
  
  # Calculate the share
  soft_drug_cons <- drugs[drugs$Age == age_group[i,] & 
                            drugs$Soft_Drug == TRUE, ]
  
  sd_share <- round((nrow(soft_drug_cons)/
                       nrow(drugs[drugs$Age == age_group[i,] , ]))*100, 2)
  
  # store values in a matrix
  age_matrix[i,] <- sd_share
  
}

print(age_matrix)

#Quick check
nrow(drugs[drugs$Age == age_group[1,] & drugs$Soft_Drug == TRUE, ])
nrow(drugs[drugs$Soft_Drug == TRUE, ])

# Indeed we observe a strict abandonment of soft drug consumption
# as age increases. At least as young adults get over 17 years, they
# don't declare if they consume soft drugs. Could it be that young adults aged
# 18+ hide their soft drug consumption?

#-------------------------------------------------------------------------------

# Exercise 4 - Chi squared

## Part 1 - Earnings and Soft Drug Consumption Table

# Transform na into 0s
drugs$Earning[is.na(drugs$Earning)] <- 0

income_group=matrix(levels(factor(drugs$Earning, order = TRUE)))
#the data is not ordered...

#Therefore we need to order manually
income_group_ordered=matrix(c("0","<1k USD","1-5k USD", 
                              "5-10k USD", ">10k USD"))

#Create an empty matrix
income_matrix = matrix(NA, nrow=length(income_group), 
                    ncol=2)
rownames(income_matrix) <- c("0","<1k USD","1-5k USD", "5-10k USD", ">10k USD")
colnames(income_matrix) <- c("TRUE","FALSE")
#Quick Test
nrow(drugs[drugs$Earning == income_group_ordered[1,] & drugs$Soft_Drug == TRUE, ])
nrow(drugs[drugs$Earning == income_group_ordered[1,] ,])

#For loop to store all the values
for (i in c(1:length(income_group))){
  
  # Calculate the share
  soft_drug_cons <- drugs[drugs$Earning == income_group_ordered[i,] 
                          & drugs$Soft_Drug == TRUE, ]
  
  sd_share <- round((nrow(soft_drug_cons)/
                       nrow(drugs[drugs$Earning == income_group_ordered[i,]
                                  , ]))*100, 2)
  
  # store values in a matrix
  income_matrix[i,1] <- sd_share
  income_matrix[i,2] <- 100-sd_share
}

print(income_matrix)

## Part 2 - Calculate Chi-Squared

chisq.test(x=drugs$Earning, y=drugs$Soft_Drug)

# We are very close to rejecting the independence hypothesis, but to be precise
# we cannot reject the independence hypothesis as the p-value is lower than
# the 5% threshold.

#-------------------------------------------------------------------------------

# Exercise 5 - Random sample with multiple draws

obs_size=500

multiple_drugs_samples <- matrix(NA, nrow=obs_size, ncol=1)

sample_numb=500

#First we convert the string variables to numeric (dummy)
boolean_sd = as.logical(drugs$Soft_Drug) 
dummy_sd = as.numeric(boolean)

set.seed(2122020) # for results replication

#For loop to generate  a random sample with 500 observations, 500 times
for (i in 1:sample_numb) {

  multiple_drugs_samples[i,] = mean(sample(dummy_sd, 
                                           size=obs_size, replace=TRUE))*100
  }

head(multiple_drugs_samples, 5) # Test


hist(multiple_drugs_samples, probability = FALSE, 
     main = "Histogram for Soft Drug Use (obs = 500, draws = 500)",
     xlab="Subsample mean of Soft Drug Use (%)")
abline(v=mean(multiple_drugs_samples), col="blue")
abline(v=median(multiple_drugs_samples), col="lightgreen")

round(mean(multiple_drugs_samples),2) #subsample mean from 500 draws
round(mean(dummy_sd)*100,2) #population mean

# We observe that the recorded subsample means are very close to the average
# soft drug consumption in the full sample. This corresponds to the Central 
# Limit Theory Hypothesis.

# Alternative with ggplot for aesthetics

# Convert matrix to data frame
df <- as.data.frame(multiple_drugs_samples)

#Plot
ggplot(data=df, aes(x=V1)) + 
  geom_histogram(binwidth= 1 , color = "darkblue", fill = "lightblue") +
  ggtitle("Histogram for Soft Drug Use (obs = 500, draws = 500)")+
  xlab("Subsample mean of Soft Drug Use (%)") + 
  geom_vline(xintercept=mean(df$V1), col="red") +
  geom_vline(xintercept=median(df$V1), col="purple") + theme_bw()

#-------------------------------------------------------------------------------

# Exercise 6 - Comparing random samples

# Part 1. Creating a function to generate random samples and print mean of 
# each subsample

set.seed(2122020) # for replication of results

subsample_mean=function(data, variable, sample.size, ndraws)
{

  subsample_mean= matrix(NA, nrow=ndraws, ncol=1)

# Transform character variables into boolean 
if (class(variable) == "character"){
  boolean = as.logical(variable) 
  dummy = as.numeric(boolean)
  
  # Calculate the mean of each subsample with for loop
  for (i in 1:ndraws) {
    subsample_mean[i,] = mean(sample(dummy, sample.size, replace=TRUE))*100
  }
}
else if (class(variable) == "logical"){
  dummy = as.numeric(variable)
  for (i in 1:ndraws) {
    subsample_mean[i,] = mean(sample(dummy, sample.size, replace=TRUE))*100
  }
}
else{for (i in 1:ndraws) {
  subsample_mean[i,] = mean(sample(variable, sample.size, replace=TRUE))*100
  }}
  
  return(subsample_mean)
}

#Testing the function

mean(subsample_mean(drugs, drugs$Hard_Drug, 1500, 100))

mean(subsample_mean(drugs, drugs$Soft_Drug, 500, 1000))

