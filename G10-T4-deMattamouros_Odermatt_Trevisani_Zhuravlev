# ----------------------------------------------------------------------------
#                                                                                                                      
#
#                  88
#                  88
#                  88             
#                  88                                   
#                  88                                    
#                  8b,dPPPPYba, ,dPPPYba,   ,adYPPPYba88
#                  88P'    `"8a a8P   `"8a  a8P       88
#                  88        88 8PP         8PP       88
#                  88        88 `"PPYYba"   8O        88
#                  88        88         8P   8b,     ,88
#                  88        88 "8a,   "a8   `"Ybbdd888"
#                  88        88 `"YbbdPP"             88
#                                                     88
#                                            "8b      88
#                                            `"Ybbdd888"  
#
#     Jose de Mattamouros, Linda Odermatt, Elena Trevisani, Vasily Zhuravlev
#     Master in Economics
#     University of St. Gallen
#     9000 St. Gallen
#
# ------------------------------------------------------------------------------
# 
# Filename:  Data Analytics 1: Predictive Econometrics - PC 4
# Topic:     Forests
# Date of submission: 11.12.2022
#
# ------------------------------------------------------------------------------
#Step 1: Set the working directory:
#Find which directory you are currently working in
ddpath 
getwd()
# "~/Desktop/HSG/MEcon Herbst Semester/2nd half of the semester/Data Analytics I - Predictive Econometrics/Lecture 5 - Regularised Regression"
#Set the directory you would like to work in
setwd("~/Desktop/HSG/MEcon Herbst Semester/2nd half of the semester/Data Analytics I - Predictive Econometrics/Lecture 5 - Regularised Regression")
#
#Load data
read_csv("R course/Data/browser_2006.csv")
read_csv("R course/Data/browser_new.csv")
#
# ------------------------------------------------------------------------------
#Step 2: Install and load the relevant packages for the problem

#remove # to install the packages
#install.packages("grf")
#install.packages("DiagrammeR")
#install.packages("glmnet")

#load the packages
library("grf")
library("DiagrammeR")
library("glmnet")

#-------------------------------------------------------------------------------

#Exercise 1 - Calculate the average online spending in 2006
mean(browser_2006$spend)

#same code with more text for better comprehension
print(paste("The average online spending of a household in 2006 was", 
            round(mean(browser_2006$spend),digits=2), "USD"))


#-------------------------------------------------------------------------------

#Exercise 2 - Find the most popular webpage of household with id 1297

#something is odd with this code, check with Jose
names(browser_2006[browser_2006$id == 1297,-1])[max(browser_2006[browser_2006$id == 1297,-1])]

#alternative solution
id_1297=browser_2006[browser_2006$id == 1297,3:ncol(browser_2006)] #extract row
max(id_1297) # calculate the maximum value in % which represents the
#share of the most visited webpage by the household
sum(id_1297) #should add up to 100

t_id_1297=t(id_1297) #transpose the data frame, so that it can be sorted

id_1297_top_website = head(t_id_1297[order(-t_id_1297),],1) 
# the most visited website

print(paste("The most visited webpage by a household with ID 1297 is",
            names(id_1297_top_website)))

#shortcut function which yields the same result in 1 line

apply(browser_2006[browser_2006$id == 1297,-(1:2)], 1, function(x) max(names(which(x == max(id_1297)))))

#------------------------------------------------------------------------------

#Exercise 3 - Find two webpages which are the best linear predictors for online
#spending

set.seed(123) #for future easier comparision --> Comment: no need bc we don't do CV

lasso_model = glmnet(as.matrix(browser_2006[,-c(1,2)]), browser_2006$spend, 
family = "gaussian", alpha = 1, dfmax=3) #set the model

vector_coef=c(coef(lasso_model, s = lasso_model$lambda[2])[,1]) 
#lambda such that number of non zero coef is 2, wrap into a vector for simplicity

vector_coef[vector_coef!=0] #all non zero coef plus intercept

#print the names of top 2 websites that are best linear predictors for online spending

top_2=t(vector_coef[vector_coef!=0]) 
names(top_2[,-1])

